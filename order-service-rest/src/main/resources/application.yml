server:
  port: 8084
spring:
  application:
    name: rest-order-service
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/shop?userUnicode=true&characterEncoding=utf-8
    username: root
    password: liuhao123
  jpa:
    database: mysql
    show-sql: true
    open-in-view: true
eureka:
  client:
    service-url:
      defaultZone: http://localhost:9000/eureka/
  instance:
    prefer-ip-address: true # 使用ip地址注册
# 修改ribbon的负载均衡策略  服务名 - ribbon - NFLoadBalancerRuleClassName : 策略
product-service:
  ribbon:
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule
    ConnectTimeout: 2500 # Ribbon的连接超时时间
    ReadTimeout: 1000 # Ribbon的数据读取超时时间
    OkToRetryOnAllOperation: true # 是否对所有操作都进行重试
    MaxAutoRetriesNextServer: 1 # 切换实例的重试次数
    MaxAutoRetries: 1 # 对当前实例的重试次数
#配置Feign日志的输出
#日志配置 NONE:不输出日志(性能最高)  BASIC:适用于生产环境追踪问题 HEADERS: 在BASIC的基础上，记录请求和响应头信息
# FULL: 记录所有
feign:
  client:
    config:
      product-service: # 需要调用的服务名称
        loggerLevel: FULL
logging:
  level:
    cn.itcast.order.feign.ProductFeignClient: debug
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInmilliseconds: 3000 #默认的连接超时时间1秒，若1秒没有返回数据，自动的触发降级方法
          timeout:
            enabled: true #必须设置true，否则会交给Ribbon
      circuitBreaker:
        requestVolumeThreshold: 5 #触发熔断的最小请求次数，默认20，每十秒
        sleepWindowMilliseconds: 10000 #熔断多少秒后去尝试请求，open状态时间，默认5s
        errorThresholdPercentage: 50 #触发熔断的失败请求最小占比，默认50%
management:
  endpoints:
    web:
      exposure:
        include: '*'